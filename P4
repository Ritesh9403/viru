def solve_n_queens(n):
    def is_safe(board, row, col):
        for i in range(row):
            if board[i] == col or abs(board[i] - col) == row - i:
                return False
        return True

    def backtrack(row):
        if row == n:
solutions.append(board[:])
            return
        for col in range(n):
            if is_safe(board, row, col):
                board[row] = col
backtrack(row + 1)
                board[row] = -1  # Backtrack

    solutions = []
    board = [-1] * n
backtrack(0)

    return [["." * c + "Q" + "." * (n - c - 1) for c in sol] for sol in solutions]

n = 4
solutions = solve_n_queens(n)
print(f"Total solutions for {n}-Queens: {len(solutions)}")
for solution in solutions:
    print("\n".join(solution) + "\n")






